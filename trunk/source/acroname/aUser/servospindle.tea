#include <aPrint.tea>
#include <aServo.tea>
#include <aCore.tea>
#include <aDig.tea>
#include <aIR.tea>

#define DRIVE_MOTOR 0
#define STEER_MOTORA 1
#define STEER_MOTORB 2
#define DRIVE_MOTOR_SPEED_MAX (unsigned char) 150
#define DRIVE_MOTOR_SPEED_OFF (unsigned char) 128

#define STEER_MOTOR_RIGHT_MAX (unsigned char) 255
#define STEER_MOTOR_LEFT_MAX (unsigned char) 0

#define SWITCH_GO 0

#define GO_TIME 10000

#define IRREMOTE

/* *************************************************************** */

void drive_forward(int time)
{

  aServo_SetAbsolute(DRIVE_MOTOR, DRIVE_MOTOR_SPEED_MAX);
  aCore_Sleep(time);
  aServo_SetAbsolute(DRIVE_MOTOR, DRIVE_MOTOR_SPEED_OFF);
}

/* *************************************************************** */

void steer(unsigned char angle)
{
  aServo_SetAbsolute(STEER_MOTORA, angle);
  aServo_SetAbsolute(STEER_MOTORB, angle);
}

/* *************************************************************** */

void main() 
{

  int data = 0;

  aPrint_String("GP\n");
  
  aIR_ConfigRX(aIR_PROTOCOL_NEC,aIR_REPLY_TEA);

#ifdef IRREMOTE  
  while (1) {
    data = aIR_RXInt();
    
    aPrint_String("IR:");
    aPrint_IntDec(data);
    aPrint_Char('\n');
    
  switch(data) {
  
    case 5: 
      steer((unsigned char) 128);
      break;
    case 1: 
      steer(STEER_MOTOR_RIGHT_MAX);
      break;
    case 0:
      steer(STEER_MOTOR_LEFT_MAX);
      break;
    case 21:
      drive_forward(GO_TIME);
      break;
      
  }
    
    aCore_Sleep(250);
  }
#endif  


  

}
