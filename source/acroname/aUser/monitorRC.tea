/* ************************************************************************** */
/* GP 2.0 monitoring file */

#include "avcDefs.tea"
#include <aServo.tea>
#include <aCore.tea>
#include <aPrint.tea>
#include <aMulti.tea>
#include <aPad.tea>
#include <aDig.tea>
#include "rc.tea"

/* ************************************************************************** */
/* 1.) Configure scatchpad values
 */
void init() {
	
	/* Configure scratchpad values */
	aPad_WriteChar(RCPAD_ENABLE, 0);
	
	/* Zero out servo pad values readings */
	
	aPad_WriteInt(AUTPAD_THROT, SERVO_NEUT);
	aPad_WriteInt(AUTPAD_STEER, SERVO_NEUT);
	
	//aServo_SetConfig(THROT_SERVO, RAMP_SERVO_SPD);
	//aServo_SetConfig(STEER_SERVO, RAMP_SERVO_SPD);
	
	
}


/* ************************************************************************** */
void main()
{
	
	int throt = SERVO_NEUT;
	int steer = SERVO_NEUT;
	int pThrot = SERVO_NEUT;
	int pSteer = SERVO_NEUT;
	char enable = 0;
	
	aPrint_String("monitorRC launched");
	aPrint_Char('\n');
	aCore_Sleep(2000);
	aPrint_Char('\n');
	
	init();
	
	// Do monitor relevant things. Bookkeeping, coordinating, etc. 
	while (1) {
		
		// Debugging for servo pulse measurement to use RC remote control over
		// riding for motion testing.	
#ifdef aDEBUG_TEA
		aPrint_String("RC remote monitor launched.");
		aPrint_Char('\n');
		aCore_Sleep(1000);
#endif

		aPad_WriteChar(RCPAD_ENABLE, RCEnabled()); 
		
		if(RCEnabled()) {
		  throt = rcWindow(read_throtRC());
		  steer = rcWindow(read_steerRC());
		
		} else {
		  throt = aPad_ReadInt(AUTPAD_THROT);
		  steer = aPad_ReadInt(AUTPAD_STEER);
		}
		  
		if(throt != pThrot) {
		  aServo_SetAbsolute(THROT_SERVO, 
				     (unsigned char) throt);
		  pThrot = throt;
#ifdef aDEBUG_TEA		  
		  aPrint_String("T: ");
		  aPrint_IntDec(throt);
		  aPrint_Char('\n');
#endif		  
		  
		}
		
		
		if(steer != pSteer) {
		  aServo_SetAbsolute(STEER_SERVO, 
				     (unsigned char) steer);
		  pSteer = steer;
#ifdef aDEBUG_TEA		  
		  aPrint_String("S: ");
		  aPrint_IntDec(steer);
		  aPrint_Char('\n');
#endif		  
		}
		
		aCore_Sleep(aSLICE);
		
	} // end while loop
	
} // end of main
